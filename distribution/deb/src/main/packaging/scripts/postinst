${packaging.scripts.header}

# postinst script for elasssandra

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

E_USER="${packaging.elassandra.user}"
E_GROUP="${packaging.elassandra.group}"
E_LOG_DIR="${packaging.elassandra.log.dir}"
E_DATA_DIR="${packaging.elassandra.data.dir}"
E_PID_DIR="${packaging.elassandra.pid.dir}"
SYSCTL_CONF="${packaging.elassandra.systemd.sysctl.dir}"/cassandra.conf

case "$1" in
    configure)
        if ! getent group $E_GROUP >/dev/null; then
            addgroup --system $E_GROUP
        fi

        if ! getent passwd $E_USER >/dev/null; then
            adduser --quiet \
                --system \
                --ingroup $E_GROUP \
                --quiet \
                --disabled-login \
                --disabled-password \
                --home $E_DATA_DIR \
                --no-create-home \
                -gecos "Elassandra database" \
                $E_USER
        fi

        if [ -z "$2" ]; then
            chown -R $E_USER:$E_GROUP $E_DATA_DIR
            chown -R $E_USER:$E_GROUP $E_LOG_DIR
            chown -R $E_USER:$E_GROUP $E_PID_DIR
        fi
        if ! sysctl -p $SYSCTL_CONF; then
            echo >&2
            echo "Warning: unable to set vm.max_map_count; is this an OpenVZ" >&2
            echo "instance? If so, it is highly recommended that you set" >&2
            echo "vm.max_map_count to 1048575 in the host." >&2
            echo >&2
            echo "Deleting the local sysctl.d/cassandra.conf." >&2
            rm -vf $SYSCTL_CONF
        fi
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ]; then

    echo -n "Restarting cassandra service..."
    if command -v systemctl >/dev/null; then
        systemctl daemon-reload
        systemctl restart cassandra.service || true

    elif [ -x /etc/init.d/cassandra ]; then
        if command -v invoke-rc.d >/dev/null; then
            invoke-rc.d cassandra stop || true
            invoke-rc.d cassandra start || true
        else
            /etc/init.d/cassandra restart || true
        fi

    # older suse linux distributions do not ship with systemd
    # but do not have an /etc/init.d/ directory
    # this tries to start the elasticsearch service on these
    # as well without failing this script
    elif [ -x /etc/rc.d/init.d/cassandra ] ; then
        /etc/rc.d/init.d/cassandra restart || true
    fi
    echo " OK"
fi

${packaging.scripts.footer}
